package main

import (
	"strconv"
)

func (client *Client) СоздатьРабочийСтол (mes Сообщение) {
	Инфо("СоздатьРабочийСтол сообщение %+v\n", mes, client)
	//log.Printf("client.Setting %+v\n", client.Setting)
 // Получить настройки пользователя, настроки рабочего стола по умолчанию

	//client.ПолучитьМеню()


	if НайстройкиРабочегоСтола, ЕстьНайстройкиРабочегоСтола := client.НайстройкиПользователя["dashboard"]; ЕстьНайстройкиРабочегоСтола{
		//log.Printf("НайстройкиРабочегоСтола %+v\n", НайстройкиРабочегоСтола, ЕстьНайстройкиРабочегоСтола)
		for i, Блок :=range НайстройкиРабочегоСтола.([]interface{}) {
			//Инфо("СоздатьРабочийСтол НайстройкиРабочегоСтола Блок %+v\n", Блок)

			НайтиБлокДляРабочегоСтола := &Сообщение{
				Текст:  Блок.(string),
				От: client.Login,
				Кому:"io",
			}
			ДейсвтияДляОтветаНаЗапрос := client.НайтиОтветНаСообщение(НайтиБлокДляРабочегоСтола)
			//Инфо(" НачатьДиалог %+v", ДейсвтияДляОтветаНаЗапрос)
			client.НачатьДиалог(НайтиБлокДляРабочегоСтола, ДейсвтияДляОтветаНаЗапрос)

			СообщениеКлиенту:= &Сообщение{
				Текст:  "БлокРабочегоСтола #"+ strconv.Itoa(i) +"- "+ Блок.(string),
				От: "io",
				Кому:client.Login,
			}

			//Результат := Выполнить(Блок.(string), client, nil)
			//log.Printf("СообщениеКлиенту %+v\n", СообщениеКлиенту)
			//log.Printf("Результат %+v\n", Результат)
			client.ВыполнитьДействиеДляОтвета(Блок.(string), &Сообщение{}, СообщениеКлиенту)
			СообщениеКлиенту.СохранитьИОтправить(client)
		}
	}
}


func (client *Client) ПолучитьМеню ()  {
	Инфо(" ПолучитьМеню: Плавающее %+v", client.Login)
	SQL :=`SELECT distinct iobot.диалоги_ио.меню, iobot.диалоги_ио.активирующее_сообщение 
			FROM iobot.диалоги_ио
			join fssp_configs.УровеньДоступаПользователя ON
					логин=$1 AND
					доступ::JSONB ?| (case when УровеньДоступаПользователя.расширенный_доступ[1] is not null then
											   УровеньДоступаПользователя.расширенный_доступ
										   else
											   УровеньДоступаПользователя.основной_доступ
										end)
			WHERE меню IS NOT NULL AND показывать_в_меню =true;`
	//OSPCode := strconv.Itoa(client.UserInfo.Info.OspCode)
	//Post := strconv.Itoa(client.UserInfo.Info.Post)
	ДанныеМеню, err := sqlStruct{
		Name:   "диалоги_ио",
		Sql:    SQL,
		Values: [][]byte{
			[]byte(client.Login),
		},
	}.Выполнить(nil)
	if err != nil {
		Ошибка(">>>> ERROR \n %+v \n\n", err)
	}
	Меню := &ДанныеОтвета{
		HTML:string(render("UserMenu", ДанныеМеню)),
		Контейнер:"main",
	}
	//Инфо("Меню %+v", Меню)
	СообщениеКлиенту:= &Сообщение{
			Текст:   "Меню рабочего стола",
			От: "io",
			Кому:client.Login,
			MessageType: []string{"system"},
			Контэнт: Меню,
		}
		client.Message<-СообщениеКлиенту

}